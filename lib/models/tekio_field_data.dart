//Test model to create documentation for the fields
// Can be used to continue the development of the fields
// this was majorly generated by chatgpt

import 'package:json_annotation/json_annotation.dart';
import 'package:tekio_forms/models/models.dart';

part '../generated/models/tekio_field_data.g.dart';

@JsonSerializable()
class TekioFieldData {
  @JsonKey(name: 'order')
  int? order;
  @JsonKey(name: 'groupingKey')
  String? groupingKey;
  @JsonKey(name: 'fieldKey')
  String fieldKey;
  @JsonKey(
    name: 'fieldType',
    defaultValue: TekioFieldType.unknown,
    unknownEnumValue: TekioFieldType.unknown,
  )
  TekioFieldType? fieldType;
  @JsonKey(name: 'fieldLabel')
  String? fieldLabel;
  @JsonKey(name: 'fieldHint')
  String? fieldHint;
  @JsonKey(name: 'maxLines')
  int maxLines;
  @JsonKey(name: 'minLength')
  int? minLength;
  @JsonKey(name: 'maxLength')
  int? maxLength;
  @JsonKey(name: 'minValue')
  int? minValue;
  @JsonKey(name: 'maxValue')
  int? maxValue;
  @JsonKey(name: 'isMandatory')
  bool isMandatory;
  @JsonKey(name: 'enabled')
  bool enabled;
  @JsonKey(name: 'regexValidation')
  String? regexValidation;
  @JsonKey(name: 'dateTimeType')
  DateTimeType? dateTimeType;

  TekioFieldData({
    required this.fieldKey,
    this.groupingKey,
    required this.fieldType,
    this.fieldLabel,
    this.fieldHint,
    this.maxLines = 1,
    this.minLength,
    this.maxLength,
    this.isMandatory = false,
    this.order,
    this.regexValidation,
    this.maxValue,
    this.minValue,
    this.enabled = true,
    this.dateTimeType,
  });

  factory TekioFieldData.fromJson(Map<String, dynamic> json) =>
      _$TekioFieldDataFromJson(json);

  Map<String, dynamic> toJson() => _$TekioFieldDataToJson(this);
}
